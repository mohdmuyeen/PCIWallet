//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PaymentsPCI
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PCITokenDataModel : DbContext
    {
        public PCITokenDataModel()
            : base("name=PCITokenDataModel")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tPaymentTransaction> tPaymentTransactions { get; set; }
        public virtual DbSet<tPCIToken> tPCITokens { get; set; }
        public virtual DbSet<tStgPayment> tStgPayments { get; set; }
    
        public virtual int insertpayment(string pACCOUNTID, Nullable<decimal> pPAYMENTAMOUNT, string pBANKACCOUNTNUMBER, string pROUTINGNUMBER, string pCREDITCARDNUMBER)
        {
            var pACCOUNTIDParameter = pACCOUNTID != null ?
                new ObjectParameter("PACCOUNTID", pACCOUNTID) :
                new ObjectParameter("PACCOUNTID", typeof(string));
    
            var pPAYMENTAMOUNTParameter = pPAYMENTAMOUNT.HasValue ?
                new ObjectParameter("PPAYMENTAMOUNT", pPAYMENTAMOUNT) :
                new ObjectParameter("PPAYMENTAMOUNT", typeof(decimal));
    
            var pBANKACCOUNTNUMBERParameter = pBANKACCOUNTNUMBER != null ?
                new ObjectParameter("PBANKACCOUNTNUMBER", pBANKACCOUNTNUMBER) :
                new ObjectParameter("PBANKACCOUNTNUMBER", typeof(string));
    
            var pROUTINGNUMBERParameter = pROUTINGNUMBER != null ?
                new ObjectParameter("PROUTINGNUMBER", pROUTINGNUMBER) :
                new ObjectParameter("PROUTINGNUMBER", typeof(string));
    
            var pCREDITCARDNUMBERParameter = pCREDITCARDNUMBER != null ?
                new ObjectParameter("PCREDITCARDNUMBER", pCREDITCARDNUMBER) :
                new ObjectParameter("PCREDITCARDNUMBER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertpayment", pACCOUNTIDParameter, pPAYMENTAMOUNTParameter, pBANKACCOUNTNUMBERParameter, pROUTINGNUMBERParameter, pCREDITCARDNUMBERParameter);
        }
    
        public virtual ObjectResult<PAYMENTHISTORY_Result> PAYMENTHISTORY(string pACCOUNTID)
        {
            var pACCOUNTIDParameter = pACCOUNTID != null ?
                new ObjectParameter("PACCOUNTID", pACCOUNTID) :
                new ObjectParameter("PACCOUNTID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PAYMENTHISTORY_Result>("PAYMENTHISTORY", pACCOUNTIDParameter);
        }
    
        public virtual ObjectResult<PymtHistory_Result> PymtHistory(string pACCOUNTID)
        {
            var pACCOUNTIDParameter = pACCOUNTID != null ?
                new ObjectParameter("PACCOUNTID", pACCOUNTID) :
                new ObjectParameter("PACCOUNTID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PymtHistory_Result>("PymtHistory", pACCOUNTIDParameter);
        }
    
        public virtual int ReversePayment(string pACCOUNTID, string pTRANSACTIONNUMBER)
        {
            var pACCOUNTIDParameter = pACCOUNTID != null ?
                new ObjectParameter("PACCOUNTID", pACCOUNTID) :
                new ObjectParameter("PACCOUNTID", typeof(string));
    
            var pTRANSACTIONNUMBERParameter = pTRANSACTIONNUMBER != null ?
                new ObjectParameter("PTRANSACTIONNUMBER", pTRANSACTIONNUMBER) :
                new ObjectParameter("PTRANSACTIONNUMBER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReversePayment", pACCOUNTIDParameter, pTRANSACTIONNUMBERParameter);
        }
    
        public virtual int StopPayment(string pACCOUNTID, string pTRANSACTIONNUMBER)
        {
            var pACCOUNTIDParameter = pACCOUNTID != null ?
                new ObjectParameter("PACCOUNTID", pACCOUNTID) :
                new ObjectParameter("PACCOUNTID", typeof(string));
    
            var pTRANSACTIONNUMBERParameter = pTRANSACTIONNUMBER != null ?
                new ObjectParameter("PTRANSACTIONNUMBER", pTRANSACTIONNUMBER) :
                new ObjectParameter("PTRANSACTIONNUMBER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StopPayment", pACCOUNTIDParameter, pTRANSACTIONNUMBERParameter);
        }
    
        public virtual ObjectResult<uspGetWallet_Result> uspGetWallet(string pAccountId)
        {
            var pAccountIdParameter = pAccountId != null ?
                new ObjectParameter("pAccountId", pAccountId) :
                new ObjectParameter("pAccountId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetWallet_Result>("uspGetWallet", pAccountIdParameter);
        }
    
        public virtual int VOIDPAYMENT(string pACCOUNTID, string pTRANSACTIONNUMBER)
        {
            var pACCOUNTIDParameter = pACCOUNTID != null ?
                new ObjectParameter("PACCOUNTID", pACCOUNTID) :
                new ObjectParameter("PACCOUNTID", typeof(string));
    
            var pTRANSACTIONNUMBERParameter = pTRANSACTIONNUMBER != null ?
                new ObjectParameter("PTRANSACTIONNUMBER", pTRANSACTIONNUMBER) :
                new ObjectParameter("PTRANSACTIONNUMBER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VOIDPAYMENT", pACCOUNTIDParameter, pTRANSACTIONNUMBERParameter);
        }
    
        public virtual int walletPayment(string pACCOUNTID, Nullable<decimal> pPAYMENTAMOUNT, string pTPCITOKEN)
        {
            var pACCOUNTIDParameter = pACCOUNTID != null ?
                new ObjectParameter("PACCOUNTID", pACCOUNTID) :
                new ObjectParameter("PACCOUNTID", typeof(string));
    
            var pPAYMENTAMOUNTParameter = pPAYMENTAMOUNT.HasValue ?
                new ObjectParameter("PPAYMENTAMOUNT", pPAYMENTAMOUNT) :
                new ObjectParameter("PPAYMENTAMOUNT", typeof(decimal));
    
            var pTPCITOKENParameter = pTPCITOKEN != null ?
                new ObjectParameter("PTPCITOKEN", pTPCITOKEN) :
                new ObjectParameter("PTPCITOKEN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("walletPayment", pACCOUNTIDParameter, pPAYMENTAMOUNTParameter, pTPCITOKENParameter);
        }
    }
}
