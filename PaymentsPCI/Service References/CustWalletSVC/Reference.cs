//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PaymentsPCI.CustWalletSVC {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WalletInfo", Namespace="http://schemas.datacontract.org/2004/07/PCIWallet")]
    [System.SerializableAttribute()]
    public partial class WalletInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentAccountLastFourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoutingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToketIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIDField, value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentAccountLastFour {
            get {
                return this.PaymentAccountLastFourField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentAccountLastFourField, value) != true)) {
                    this.PaymentAccountLastFourField = value;
                    this.RaisePropertyChanged("PaymentAccountLastFour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoutingNumber {
            get {
                return this.RoutingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RoutingNumberField, value) != true)) {
                    this.RoutingNumberField = value;
                    this.RaisePropertyChanged("RoutingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToketID {
            get {
                return this.ToketIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ToketIDField, value) != true)) {
                    this.ToketIDField = value;
                    this.RaisePropertyChanged("ToketID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentHistory", Namespace="http://schemas.datacontract.org/2004/07/PCIWallet")]
    [System.SerializableAttribute()]
    public partial class PaymentHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isReversalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isVoidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Accountid {
            get {
                return this.AccountidField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountidField, value) != true)) {
                    this.AccountidField = value;
                    this.RaisePropertyChanged("Accountid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentAmount {
            get {
                return this.PaymentAmountField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentAmountField, value) != true)) {
                    this.PaymentAmountField = value;
                    this.RaisePropertyChanged("PaymentAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentDate {
            get {
                return this.PaymentDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentDateField, value) != true)) {
                    this.PaymentDateField = value;
                    this.RaisePropertyChanged("PaymentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionNumber {
            get {
                return this.TransactionNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionNumberField, value) != true)) {
                    this.TransactionNumberField = value;
                    this.RaisePropertyChanged("TransactionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionStatus {
            get {
                return this.TransactionStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionStatusField, value) != true)) {
                    this.TransactionStatusField = value;
                    this.RaisePropertyChanged("TransactionStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isReversal {
            get {
                return this.isReversalField;
            }
            set {
                if ((this.isReversalField.Equals(value) != true)) {
                    this.isReversalField = value;
                    this.RaisePropertyChanged("isReversal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isVoid {
            get {
                return this.isVoidField;
            }
            set {
                if ((this.isVoidField.Equals(value) != true)) {
                    this.isVoidField = value;
                    this.RaisePropertyChanged("isVoid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Payment", Namespace="http://schemas.datacontract.org/2004/07/PCIWallet")]
    [System.SerializableAttribute()]
    public partial class Payment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankAccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditCardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoutingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Accountid {
            get {
                return this.AccountidField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountidField, value) != true)) {
                    this.AccountidField = value;
                    this.RaisePropertyChanged("Accountid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankAccountNumber {
            get {
                return this.BankAccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BankAccountNumberField, value) != true)) {
                    this.BankAccountNumberField = value;
                    this.RaisePropertyChanged("BankAccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditCard {
            get {
                return this.CreditCardField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditCardField, value) != true)) {
                    this.CreditCardField = value;
                    this.RaisePropertyChanged("CreditCard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentAmount {
            get {
                return this.PaymentAmountField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentAmountField, value) != true)) {
                    this.PaymentAmountField = value;
                    this.RaisePropertyChanged("PaymentAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoutingNumber {
            get {
                return this.RoutingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RoutingNumberField, value) != true)) {
                    this.RoutingNumberField = value;
                    this.RaisePropertyChanged("RoutingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TokenID {
            get {
                return this.TokenIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenIDField, value) != true)) {
                    this.TokenIDField = value;
                    this.RaisePropertyChanged("TokenID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CustWalletSVC.ICustomerWallet")]
    public interface ICustomerWallet {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerWallet/RetrieveWallet", ReplyAction="http://tempuri.org/ICustomerWallet/RetrieveWalletResponse")]
        PaymentsPCI.CustWalletSVC.WalletInfo[] RetrieveWallet(string AccountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerWallet/RetrieveWallet", ReplyAction="http://tempuri.org/ICustomerWallet/RetrieveWalletResponse")]
        System.Threading.Tasks.Task<PaymentsPCI.CustWalletSVC.WalletInfo[]> RetrieveWalletAsync(string AccountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerWallet/PaymentHistory", ReplyAction="http://tempuri.org/ICustomerWallet/PaymentHistoryResponse")]
        PaymentsPCI.CustWalletSVC.PaymentHistory[] PaymentHistory(string AccountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerWallet/PaymentHistory", ReplyAction="http://tempuri.org/ICustomerWallet/PaymentHistoryResponse")]
        System.Threading.Tasks.Task<PaymentsPCI.CustWalletSVC.PaymentHistory[]> PaymentHistoryAsync(string AccountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerWallet/VoidPayment", ReplyAction="http://tempuri.org/ICustomerWallet/VoidPaymentResponse")]
        string VoidPayment(string AccountId, string TransactionNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerWallet/VoidPayment", ReplyAction="http://tempuri.org/ICustomerWallet/VoidPaymentResponse")]
        System.Threading.Tasks.Task<string> VoidPaymentAsync(string AccountId, string TransactionNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerWallet/ReversePayment", ReplyAction="http://tempuri.org/ICustomerWallet/ReversePaymentResponse")]
        string ReversePayment(string AccountId, string TransactionNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerWallet/ReversePayment", ReplyAction="http://tempuri.org/ICustomerWallet/ReversePaymentResponse")]
        System.Threading.Tasks.Task<string> ReversePaymentAsync(string AccountId, string TransactionNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerWallet/MakePayment", ReplyAction="http://tempuri.org/ICustomerWallet/MakePaymentResponse")]
        string MakePayment(PaymentsPCI.CustWalletSVC.Payment objPayment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerWallet/MakePayment", ReplyAction="http://tempuri.org/ICustomerWallet/MakePaymentResponse")]
        System.Threading.Tasks.Task<string> MakePaymentAsync(PaymentsPCI.CustWalletSVC.Payment objPayment);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerWalletChannel : PaymentsPCI.CustWalletSVC.ICustomerWallet, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerWalletClient : System.ServiceModel.ClientBase<PaymentsPCI.CustWalletSVC.ICustomerWallet>, PaymentsPCI.CustWalletSVC.ICustomerWallet {
        
        public CustomerWalletClient() {
        }
        
        public CustomerWalletClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerWalletClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerWalletClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerWalletClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PaymentsPCI.CustWalletSVC.WalletInfo[] RetrieveWallet(string AccountId) {
            return base.Channel.RetrieveWallet(AccountId);
        }
        
        public System.Threading.Tasks.Task<PaymentsPCI.CustWalletSVC.WalletInfo[]> RetrieveWalletAsync(string AccountId) {
            return base.Channel.RetrieveWalletAsync(AccountId);
        }
        
        public PaymentsPCI.CustWalletSVC.PaymentHistory[] PaymentHistory(string AccountId) {
            return base.Channel.PaymentHistory(AccountId);
        }
        
        public System.Threading.Tasks.Task<PaymentsPCI.CustWalletSVC.PaymentHistory[]> PaymentHistoryAsync(string AccountId) {
            return base.Channel.PaymentHistoryAsync(AccountId);
        }
        
        public string VoidPayment(string AccountId, string TransactionNumber) {
            return base.Channel.VoidPayment(AccountId, TransactionNumber);
        }
        
        public System.Threading.Tasks.Task<string> VoidPaymentAsync(string AccountId, string TransactionNumber) {
            return base.Channel.VoidPaymentAsync(AccountId, TransactionNumber);
        }
        
        public string ReversePayment(string AccountId, string TransactionNumber) {
            return base.Channel.ReversePayment(AccountId, TransactionNumber);
        }
        
        public System.Threading.Tasks.Task<string> ReversePaymentAsync(string AccountId, string TransactionNumber) {
            return base.Channel.ReversePaymentAsync(AccountId, TransactionNumber);
        }
        
        public string MakePayment(PaymentsPCI.CustWalletSVC.Payment objPayment) {
            return base.Channel.MakePayment(objPayment);
        }
        
        public System.Threading.Tasks.Task<string> MakePaymentAsync(PaymentsPCI.CustWalletSVC.Payment objPayment) {
            return base.Channel.MakePaymentAsync(objPayment);
        }
    }
}
